generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  active    Boolean  @default(true)
  orders    Order[] 
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  image       String
  slug        String   @unique
  products    Product[]
  active      Boolean  @default(true)
  dateCreated DateTime @default(now())
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
priceLKR Float @default(0)
priceUSD Float @default(0)
  quantity    Int
  image       String?
  active      Boolean  @default(true)
  categoryId  String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  userId    String     @unique
  items     CartItem[]
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  productId String
  name      String
  priceLKR  Float
  priceUSD  Float
  quantity  Int
  weight    Float     // weight in KG
  image     String?
  cartId    String
  cart      Cart      @relation(fields: [cartId], references: [id])
}

model Order {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  userId        String?     @db.ObjectId
  user          User?       @relation(fields: [userId], references: [id])
  items         OrderItem[]
totalPriceLKR Float?
totalPriceUSD Float?
  paymentMethod String
  status        String      @default("Pending")
  createdAt     DateTime    @default(now())
}

model OrderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String
  name      String
priceLKR  Float?
priceUSD  Float?
  quantity  Int
  weightKg  Float?
  image     String?
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
}

model BulkOrder {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String
  phone       String?
  company     String?
  message     String?
  productList String? // Product names / description
  quantity    Int?    // Bulk quantity
  weight      String? // Weight (e.g., "5kg")
  status      String   @default("pending") // <-- Add this
  createdAt   DateTime @default(now())
}

model Service {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  image       String
  buttonText  String?
  link        String?
  createdAt   DateTime @default(now())
}

model Blog {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  category    String
  image       String
  date        String
  description String?
  createdAt   DateTime @default(now())
}

model BeyondTradition {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String?   // now optional
  subtitle    String?
  description String?   // now optional
  images      String[]
  createdAt   DateTime @default(now())
}



